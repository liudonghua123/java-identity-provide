<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:c="http://www.springframework.org/schema/c" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"

	default-init-method="initialize" default-destroy-method="destroy">

    <bean id="shibboleth.PropertySourcesPlaceholderConfigurer"
        class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer"
        p:placeholderPrefix="%{" p:placeholderSuffix="}" />

   <bean id="shibboleth.IdentifiableBeanPostProcessor" class="net.shibboleth.ext.spring.config.IdentifiableBeanPostProcessor" />

    <!-- This bean MUST be called "conversionService" to work properly. -->
    <bean id="conversionService" class="org.springframework.context.support.ConversionServiceFactoryBean">
        <property name="converters">
            <set>
                <bean class="net.shibboleth.ext.spring.config.StringToIPRangeConverter" />
                <bean class="net.shibboleth.ext.spring.config.BooleanToPredicateConverter" />
                <bean class="net.shibboleth.ext.spring.config.StringBooleanToPredicateConverter" />
                <bean class="net.shibboleth.ext.spring.config.StringToResourceConverter" />
                <bean class="net.shibboleth.ext.spring.config.FunctionToFunctionConverter" />
                <bean class="net.shibboleth.ext.spring.config.PredicateToPredicateConverter" />
                <bean class="net.shibboleth.ext.spring.config.StringToDurationConverter" />
            </set>
        </property>
    </bean>
    
    <bean id="shibboleth.VelocityEngine" class="net.shibboleth.ext.spring.velocity.VelocityEngineFactoryBean">
        <property name="velocityProperties">
            <props>
                <prop key="resource.loaders">classpath, string</prop>
                <prop key="resource.loader.classpath.class">
                    org.apache.velocity.runtime.resource.loader.ClasspathResourceLoader
                </prop>
                <prop key="resource.loader.string.class">
                    org.apache.velocity.runtime.resource.loader.StringResourceLoader
                </prop>
            </props>
        </property>
    </bean>
    
    <bean id="myParserPool"
        class="net.shibboleth.utilities.java.support.xml.BasicParserPool"
        p:maxPoolSize="1000"
        p:coalescing="true" p:ignoreComments="true"
        p:ignoreElementContentWhitespace="true" p:namespaceAware="true" />
        
    <bean id="shibboleth.AttributeResolverService" class="net.shibboleth.ext.spring.service.ReloadableSpringService" 
        p:serviceConfigurations="%{ServiceConfiguration}"
        p:beanFactoryPostProcessors-ref="shibboleth.PropertySourcesPlaceholderConfigurer"
        p:beanPostProcessors-ref="shibboleth.IdentifiableBeanPostProcessor"
        p:failFast="%{failFast}" 
        p:reloadCheckDelay="0">
        <constructor-arg name="claz" value="net.shibboleth.idp.attribute.resolver.AttributeResolver" />
        <constructor-arg name="strategy">
            <bean class="net.shibboleth.idp.attribute.resolver.spring.impl.AttributeResolverServiceStrategy"
                p:stripNulls="%{idp.service.attribute.resolver.stripNulls:false}"
                id="ShibbolethAttributeResolver"/>
        </constructor-arg>
    </bean>
</beans>