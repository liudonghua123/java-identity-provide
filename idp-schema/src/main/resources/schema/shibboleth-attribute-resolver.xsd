<?xml version="1.0" encoding="UTF-8"?>
<schema xmlns="http://www.w3.org/2001/XMLSchema" xmlns:resolver="urn:mace:shibboleth:2.0:resolver" xmlns:sec="urn:mace:shibboleth:2.0:security" 
    targetNamespace="urn:mace:shibboleth:2.0:resolver" elementFormDefault="qualified"
    version="3.3.2">

    <import namespace="http://www.w3.org/XML/1998/namespace" schemaLocation="http://www.w3.org/2001/xml.xsd" />
    <import namespace="urn:mace:shibboleth:2.0:security" schemaLocation="http://shibboleth.net/schema/idp/shibboleth-security.xsd"/>

    <annotation>
        <documentation>Shibboleth 2.0 Attribute Resolver configuration schema
        </documentation>
    </annotation>

    <element name="AttributeResolver" type="resolver:AttributeResolverType">
        <annotation>
            <documentation>Root of the attribute resolver configuration file.
            </documentation>
        </annotation>
    </element>
    <complexType name="AttributeResolverType">
        <choice minOccurs="0" maxOccurs="unbounded">
            <element ref="resolver:AttributeDefinition" />
            <element ref="resolver:DataConnector" />
            <element ref="resolver:PrincipalConnector" />
        </choice>
        <attribute name="id" type="string">
            <annotation>
                <documentation>A unique identifier for this Resolver.
                </documentation>
            </annotation>
        </attribute>
    </complexType>

    <element name="AttributeDefinition" type="resolver:FlattenedBaseAttributeDefinitionType">
        <annotation>
            <documentation>Defines an attribute definition within this resolver.
            </documentation>
        </annotation>
    </element>

    <complexType name="FlattenedBaseAttributeDefinitionType">
        <annotation>
            <documentation>
                Attribute definition define the finished attributes to be released by the
                resolver.
                
                Definitions derived from this type need to explicitly include (as a choice)
                the Dependency, DisplayName, DisplayDescription and Encoder sub elements
                
                Definitions derived from this type may add the sourceAttributeID element.
            </documentation>
        </annotation>
        <complexContent>
            <extension base="resolver:FlattenedBaseResolutionPlugInType">
                <attribute name="dependencyOnly" type="string">
                    <annotation>
                        <documentation>
                            A boolean flag that indicates whether this attribute definition is
                            only defined because its data is needed elsewhere within the resolver
                            and as such should not be released outside the resolver.
                        </documentation>
                    </annotation>
                </attribute>
            </extension>
        </complexContent>
    </complexType>

    <complexType name="BaseAttributeDefinitionType">
        <annotation>
            <documentation>
                Legacy attribute definition define the finished attributes to be released by the
                resolver.
            </documentation>
        </annotation>
        <complexContent>
            <extension base="resolver:FlattenedBaseAttributeDefinitionType">
                <sequence>
                    <element ref="resolver:Dependency" minOccurs="0" maxOccurs="unbounded" />                
                    <element name="DisplayName" type="resolver:LocalizedStringType"
                        minOccurs="0" maxOccurs="unbounded">
                        <annotation>
                            <documentation>
                                A human readable name of for this attribute. This name may, for
                                example, be displayed to the user with an attribute release approval
                                request.

                                If multiple display names are used they should bear an xml:lang
                                attribute to distinguish them.
                            </documentation>
                        </annotation>
                    </element>
                    <element name="DisplayDescription" type="resolver:LocalizedStringType"
                        minOccurs="0" maxOccurs="unbounded">
                        <annotation>
                            <documentation>
                                A human readable description of for this attribute. This name
                                may, for example, be displayed to the user with an attribute release
                                approval request.

                                If multiple display descriptions are used they should bear an
                                xml:lang attribute to distinguish them.
                            </documentation>
                        </annotation>
                    </element>
                    <element ref="resolver:AttributeEncoder" minOccurs="0"
                        maxOccurs="unbounded" />
                </sequence>
                <attribute name="sourceAttributeID" type="string">
                    <annotation>
                        <documentation>
                            The name of the attribute from a data connector dependency which should be
                            used to populate this attribute definition.
                            
                            Whether this attribute is required or optional depends on whether the dependency
                            set contains data connectors or attribute definitions. It may be left out for
                            attribute dependencies but MUST be set if there are data connector dependencies.
                            
                            This was a flawed schema design and may eventually be altered.
                        </documentation>
                    </annotation>
                </attribute>
            </extension>
        </complexContent>
    </complexType>

    <element name="AttributeEncoder" type="resolver:BaseAttributeEncoderType">
        <annotation>
            <documentation>Defines an encoder for an attribute.</documentation>
        </annotation>
    </element>
    <complexType name="BaseAttributeEncoderType">
        <annotation>
            <documentation>
                An attribute encoder is responsible for converting an attribute, and it's values,
                into a protocol specific representation such as a SAML 1 Attribute or a SAML 2 NameID.
            </documentation>
        </annotation>
        <attribute name="name" type="string" />
        <attribute name="encodeType" type="string">
            <annotation>
                <documentation>
                    A boolean indicating whether the encoding should include type information. This is
                    encoding-specific (e.g., for XML it likely involves xsi:type).
                </documentation>
            </annotation>
        </attribute>
        <attribute name="activationConditionRef" type="string">
            <annotation>
                <documentation>
                    The reference to a Predicate which controls whether this encoder will run
                </documentation>
            </annotation>
        </attribute>
    </complexType>

    <element name="DataConnector" type="resolver:FlattenedBaseDataConnectorType">
        <annotation>
            <documentation>
                Defines a data connector which is used to pull information from local
                infrastructure.
            </documentation>
        </annotation>
    </element>

    <complexType name="FlattenedBaseDataConnectorType">
        <annotation>
            <documentation>
                Data connectors pull information from local infrastructure, such as
                databases and LDAP directories, and make these raw attributes available
                to attribute definitions for finishing.
            </documentation>
        </annotation>
        <complexContent>
            <extension base="resolver:FlattenedBaseResolutionPlugInType">
                <attribute name="noRetryDelay" type="string">
                    <annotation>
                        <documentation>Time to bypass connector after a failure before trying it again.</documentation>
                    </annotation>
                </attribute>
                <attribute name="springResources" type="string">
                    <annotation>
                        <documentation>Locations of Spring resource configurations.</documentation>
                    </annotation>
                </attribute>
                <attribute name="springResourcesRef" type="string">
                    <annotation>
                        <documentation>Bean Name of locations of Spring resource configurations.</documentation>
                    </annotation>
                </attribute>
                <attribute name="factoryPostProcessorsRef" type="string">
                    <annotation>
                        <documentation>Bean Name of locations of bean factory post processors resource configurations.  Defaults to shibboleth.PropertySourcesPlaceholderConfigurer.</documentation>
                    </annotation>
                </attribute>
                <attribute name="postProcessorsRef" type="string">
                    <annotation>
                        <documentation>Bean Name of a list of bean post processors.</documentation>
                    </annotation>
                </attribute>
            </extension>
        </complexContent>
    </complexType>

    <complexType name="BaseDataConnectorType">
        <annotation>
            <documentation>
                Data connectors pull information from local infrastructure, such as
                databases and LDAP directories, and make these raw attributes available
                to attribute definitions for finishing.
            </documentation>
        </annotation>
        <complexContent>
            <extension base="resolver:FlattenedBaseDataConnectorType">
                <sequence>
                    <element ref="resolver:Dependency" minOccurs="0" maxOccurs="unbounded" />
                    <element ref="resolver:FailoverDataConnector" minOccurs="0" />
                </sequence>
            </extension>
        </complexContent>
    </complexType>

    <element name="PrincipalConnector" type="resolver:BasePrincipalConnectorType">
        <annotation>
            <documentation>
    Principal connectors convert a subject's NameID into an internal principal
    name for use within attribute definitions and data connectors.
            </documentation>
        </annotation>
    </element>
    <complexType name="BasePrincipalConnectorType">
        <annotation>
            <documentation>
                Principal connectors convert a subject's NameID into an internal principal
                name for use within attribute definitions and data connectors.
            </documentation>
        </annotation>
        <complexContent>
            <extension base="resolver:BaseResolutionPlugInType">
                <sequence>
                    <element name="RelyingParty" type="string" minOccurs="0"
                        maxOccurs="unbounded">
                        <annotation>
                            <documentation>
                                The relying party for which this connector is valid.
                            </documentation>
                        </annotation>
                    </element>
                </sequence>
                <attribute name="nameIDFormat" type="string" use="required">
                    <annotation>
                        <documentation>
                            The format of the NameID for which this connector is valid.
                        </documentation>
                    </annotation>
                </attribute>
            </extension>
        </complexContent>
    </complexType>

    <complexType name="FlattenedBaseResolutionPlugInType" abstract="true">
        <annotation>
            <documentation>
                A base type for all attribute resolver plugins: data and principal
                connectors and attribute definitions
            </documentation>
        </annotation>
        <attribute name="id" type="string" use="required">
            <annotation>
                <documentation>A unique identifier for this definition.</documentation>
            </annotation>
        </attribute>
        <attribute name="activationConditionRef" type="string">
            <annotation>
                <documentation>
                    A reference to a predicate to decide whether this plugin is applicable
                </documentation>
            </annotation>
        </attribute>
        <attribute name="profileContextStrategyRef" type="string">
            <annotation>
                <documentation>
                    A reference to a function to locate the profile context
                </documentation>
            </annotation>
        </attribute>
    </complexType>

    <complexType name="BaseResolutionPlugInType" abstract="true">
        <annotation>
            <documentation>
                A base type for all legacy attribute resolver plugins
            </documentation>
        </annotation>
        <complexContent>
        <extension base="resolver:FlattenedBaseResolutionPlugInType">
            <sequence>
                <element ref="resolver:Dependency" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
        </extension>        
        </complexContent>
    </complexType>

    <element name="Dependency" type="resolver:PluginDependencyType">
        <annotation>
            <documentation>
                Defines a dependency on a specific resolution plug-in.
            </documentation>
        </annotation>
    </element>
    <element name="FailoverDataConnector" type="resolver:PluginDependencyType">
        <annotation>
            <documentation>
                Defines a data connector to use should the parent data connector fail.
            </documentation>
        </annotation>
    </element>
    <complexType name="PluginDependencyType">
        <annotation>
            <documentation>A type that represents a reference to another plugin</documentation>
        </annotation>
        <attribute name="ref" type="string" use="required" />
    </complexType>

    <complexType name="LocalizedStringType">
        <simpleContent>
            <extension base="string">
                <attribute ref="xml:lang" />
            </extension>
        </simpleContent>
    </complexType>

    <complexType name="ValueMapType">
        <annotation>
            <documentation>
                Performs many to one mapping of source values to a return value. SourceValue strings may include regular
                expressions and the ReturnValue may include back references to capturing groups as supported by
                java.util.regex.Pattern.
            </documentation>
        </annotation>
        <sequence>
            <element name="ReturnValue" type="string">
                <annotation>
                    <documentation>The value to be returned from this value map.</documentation>
                </annotation>
            </element>
            <element name="SourceValue" maxOccurs="unbounded">
                <annotation>
                    <documentation>A regular expression string to be matched against the incoming value.</documentation>
                </annotation>
                <complexType>
                    <simpleContent>
                        <extension base="string">
                            <attribute name="ignoreCase" type="string">
                                <annotation>
                                    <documentation>If true, value matching will be case-insensitive.</documentation>
                                </annotation>
                            </attribute>
                            <attribute name="partialMatch" type="string">
                                <annotation>
                                    <documentation>
                                        If true, the SourceValue may match only a substring of the incoming value. By
                                        default, it must match the entire value.
                                    </documentation>
                                </annotation>
                            </attribute>
                        </extension>
                    </simpleContent>
                </complexType>
            </element>
        </sequence>
    </complexType>
    
    <!--  Flatten the ad: namespace into the resolver: namespace -->
    
    <complexType name="ContextDerivedAttribute">
        <annotation>
            <documentation>A attribute definition to pull attribute values from anywhere in the PRC tree</documentation>
        </annotation>
        <complexContent>
            <extension base="resolver:FlattenedBaseAttributeDefinitionType">
                <sequence>
                    <choice maxOccurs="unbounded" minOccurs="0">
                        <element name="DisplayName" type="resolver:LocalizedStringType" minOccurs="0" maxOccurs="unbounded" /> 
                        <element name="DisplayDescription" type="resolver:LocalizedStringType" minOccurs="0" maxOccurs="unbounded"/>
                        <element ref="resolver:AttributeEncoder" minOccurs="0" maxOccurs="unbounded" />
                    </choice>
                </sequence>
                <attribute name="attributeValuesFunctionRef" type="string" use="required">
                    <annotation>
                        <documentation>The Function to generate the Attribute Values given a PRC</documentation>
                    </annotation>
                </attribute>
            </extension>
        </complexContent>
    </complexType>

    <complexType name="CryptoTransientId">
        <annotation>
            <documentation>An attribute definition used to construct stateless transient subject identifiers.</documentation>
        </annotation>
        <complexContent>
            <extension base="resolver:FlattenedBaseAttributeDefinitionType">
                <sequence>
                    <choice maxOccurs="unbounded" minOccurs="0">
                        <element name="DisplayName" type="resolver:LocalizedStringType" minOccurs="0" maxOccurs="unbounded" /> 
                        <element name="DisplayDescription" type="resolver:LocalizedStringType" minOccurs="0" maxOccurs="unbounded"/>
                        <element ref="resolver:AttributeEncoder" minOccurs="0" maxOccurs="unbounded" />
                    </choice>
                </sequence>
                <attribute name="dataSealerRef" type="string" use="required">
                    <annotation>
                        <documentation>Object used to protect and encrypt identifiers</documentation>
                    </annotation>
                </attribute>
                <attribute name="lifetime" type="string">
                    <annotation>
                        <documentation>Lifetime of issued identifiers</documentation>
                    </annotation>
                </attribute>
            </extension>
        </complexContent>
    </complexType>

    <complexType name="Mapped">
        <annotation>
            <documentation>
                The mapped attribute definition performs a many to many mapping from source attributes values provided
                by the definition's dependencies to values which are returned. Each source value is passed through each
                defined ValueMap which may result in one or more resulting values. If no ValueMaps match the source
                value and a DefaultValue is defined, the DefaultValue is used.
            </documentation>
        </annotation>
        <complexContent>
            <extension base="resolver:FlattenedBaseAttributeDefinitionType">
                <sequence>
                    <choice maxOccurs="unbounded" minOccurs="0">
                        <element ref="resolver:Dependency" minOccurs="0" maxOccurs="unbounded" />                
                        <element name="DisplayName" type="resolver:LocalizedStringType" minOccurs="0" maxOccurs="unbounded" /> 
                        <element name="DisplayDescription" type="resolver:LocalizedStringType" minOccurs="0" maxOccurs="unbounded"/>
                        <element ref="resolver:AttributeEncoder" minOccurs="0" maxOccurs="unbounded" />
                        <element name="DefaultValue" minOccurs="0">
                            <annotation>
                                <documentation>
                                    A source value is mapped to the DefaultValue if none of the ValueMaps result in a match.
                                    This string may not contain regular expression back references.
                                </documentation>
                            </annotation>
                            <complexType>
                                <simpleContent>
                                    <extension base="string">
                                        <attribute name="passThru" type="string">
                                            <annotation>
                                                <documentation>
                                                    If true, the source value is passed thru unmodified. If passThru is
                                                    enabled, DefaultValue may not contain a string value.
                                                </documentation>
                                            </annotation>
                                        </attribute>
                                    </extension>
                                </simpleContent>
                            </complexType>
                        </element>
                    <element name="ValueMap" type="resolver:ValueMapType" maxOccurs="unbounded"/>
                    </choice>
                </sequence>
                <attribute name="sourceAttributeID" type="string"/>
            </extension>
        </complexContent>
    </complexType>
    
    <complexType name="Prescoped">
        <annotation>
            <documentation>
                An attribute definition that splits the values of the source attribute into an attribute value 
                with a value and scope.
            </documentation>
        </annotation>
        <complexContent>
            <extension base="resolver:FlattenedBaseAttributeDefinitionType">
                <sequence>
                    <choice maxOccurs="unbounded" minOccurs="0">
                        <element ref="resolver:Dependency" minOccurs="0" maxOccurs="unbounded" />                
                        <element name="DisplayName" type="resolver:LocalizedStringType" minOccurs="0" maxOccurs="unbounded" /> 
                        <element name="DisplayDescription" type="resolver:LocalizedStringType" minOccurs="0" maxOccurs="unbounded"/>
                        <element ref="resolver:AttributeEncoder" minOccurs="0" maxOccurs="unbounded" />
                    </choice>
                </sequence>
                <attribute name="sourceAttributeID" type="string"/>
                <attribute name="scopeDelimiter" type="string">
                    <annotation>
                        <documentation>Delimiter between the value and scope.</documentation>
                    </annotation>
                </attribute>
            </extension>
        </complexContent>
    </complexType>
 
    <complexType name="PrincipalAuthenticationMethod">
        <annotation>
            <documentation>Exposes the principal's authentication method as an attribute definition.</documentation>
        </annotation>
        <complexContent>
            <extension base="resolver:FlattenedBaseAttributeDefinitionType">
                <sequence>
                    <choice maxOccurs="unbounded" minOccurs="0">
                        <element name="DisplayName" type="resolver:LocalizedStringType" minOccurs="0" maxOccurs="unbounded" /> 
                        <element name="DisplayDescription" type="resolver:LocalizedStringType" minOccurs="0" maxOccurs="unbounded"/>
                        <element ref="resolver:AttributeEncoder" minOccurs="0" maxOccurs="unbounded" />
                    </choice>
                </sequence>
            </extension>
        </complexContent>
     </complexType>

    <complexType name="PrincipalName">
        <annotation>
            <documentation>Exposes the principal's name as an attribute definition.</documentation>
        </annotation>
        <complexContent>
            <extension base="resolver:FlattenedBaseAttributeDefinitionType">
                <sequence>
                    <choice maxOccurs="unbounded" minOccurs="0">
                        <element name="DisplayName" type="resolver:LocalizedStringType" minOccurs="0" maxOccurs="unbounded" /> 
                        <element name="DisplayDescription" type="resolver:LocalizedStringType" minOccurs="0" maxOccurs="unbounded"/>
                        <element ref="resolver:AttributeEncoder" minOccurs="0" maxOccurs="unbounded" />
                    </choice>
                </sequence>
            </extension>            
        </complexContent>
    </complexType>
    
    <complexType name="RegexSplit">
        <annotation>
            <documentation>An attribute definition that splits the source attribute's values based on a regular expression.</documentation>
        </annotation>
        <complexContent>
            <extension base="resolver:FlattenedBaseAttributeDefinitionType">
                <sequence>
                    <choice maxOccurs="unbounded" minOccurs="0">
                        <element ref="resolver:Dependency" minOccurs="0" maxOccurs="unbounded" />                
                        <element name="DisplayName" type="resolver:LocalizedStringType" minOccurs="0" maxOccurs="unbounded" /> 
                        <element name="DisplayDescription" type="resolver:LocalizedStringType" minOccurs="0" maxOccurs="unbounded"/>
                        <element ref="resolver:AttributeEncoder" minOccurs="0" maxOccurs="unbounded" />
                    </choice>
                </sequence>
                <attribute name="sourceAttributeID" type="string"/>
                <attribute name="regex" type="string" use="required">
                    <annotation>
                        <documentation>The regular expression used to split a value.</documentation>
                    </annotation>
                </attribute>
                <attribute name="caseSensitive" type="string">
                    <annotation>
                        <documentation>
                            A boolean flag indicating the case sensitivity of the regular expression.
                        </documentation>
                    </annotation>
                </attribute>
            </extension>
        </complexContent>
    </complexType>

    <complexType name="SAML1NameIdentifier">
        <annotation>
            <documentation>An attribute definition that creates attributes whose values are SAML 1 NameIdentifiers.</documentation>
        </annotation>
        <complexContent>
            <extension base="resolver:FlattenedBaseAttributeDefinitionType">
                <sequence>
                    <choice maxOccurs="unbounded" minOccurs="0">
                        <element ref="resolver:Dependency" minOccurs="0" maxOccurs="unbounded" />                
                        <element name="DisplayName" type="resolver:LocalizedStringType" minOccurs="0" maxOccurs="unbounded" /> 
                        <element name="DisplayDescription" type="resolver:LocalizedStringType" minOccurs="0" maxOccurs="unbounded"/>
                        <element ref="resolver:AttributeEncoder" minOccurs="0" maxOccurs="unbounded" />
                    </choice>
                </sequence>
                <attribute name="sourceAttributeID" type="string"/>
                <attribute name="nameIdFormat" type="string">
                    <annotation>
                        <documentation>The SAML 1 NameFormat of the NameID.</documentation>
                    </annotation>
                </attribute>
                <attribute name="nameIdQualifier" type="string" use="optional">
                    <annotation>
                        <documentation>The SAML 1 NameQualifier of the NameID.</documentation>
                    </annotation>
                </attribute>
            </extension>
        </complexContent>
    </complexType>

    <complexType name="SAML2NameID">
        <annotation>
            <documentation>An attribute definition that creates attributes whose values are SAML 2 NameIDs.</documentation>
        </annotation>
        <complexContent>
            <extension base="resolver:FlattenedBaseAttributeDefinitionType">
                <sequence>
                    <choice maxOccurs="unbounded" minOccurs="0">
                        <element ref="resolver:Dependency" minOccurs="0" maxOccurs="unbounded" />                
                        <element name="DisplayName" type="resolver:LocalizedStringType" minOccurs="0" maxOccurs="unbounded" /> 
                        <element name="DisplayDescription" type="resolver:LocalizedStringType" minOccurs="0" maxOccurs="unbounded"/>
                        <element ref="resolver:AttributeEncoder" minOccurs="0" maxOccurs="unbounded" />
                    </choice>
                </sequence>
                <attribute name="sourceAttributeID" type="string"/>
                <attribute name="nameIdFormat" type="string">
                    <annotation>
                        <documentation>The SAML 2 NameFormat of the NameID.</documentation>
                    </annotation>
                </attribute>
                <attribute name="nameIdQualifier" type="string" use="optional">
                    <annotation>
                        <documentation>The SAML 2 NameQualifier of the NameID.</documentation>
                    </annotation>
                </attribute>
                <attribute name="nameIdSPQualifier" type="string" use="optional">
                    <annotation>
                        <documentation>The SAML 2 SPNameQualifier of the NameID.</documentation>
                    </annotation>
                </attribute>
            </extension>
        </complexContent>
    </complexType>

    <complexType name="Scoped">
        <annotation>
            <documentation>A basic attribute definition which supports attribute scoping.</documentation>
        </annotation>
        <complexContent>
            <extension base="resolver:FlattenedBaseAttributeDefinitionType">
                <sequence>
                    <choice maxOccurs="unbounded" minOccurs="0">
                        <element ref="resolver:Dependency" minOccurs="0" maxOccurs="unbounded" />                
                        <element name="DisplayName" type="resolver:LocalizedStringType" minOccurs="0" maxOccurs="unbounded" /> 
                        <element name="DisplayDescription" type="resolver:LocalizedStringType" minOccurs="0" maxOccurs="unbounded"/>
                        <element ref="resolver:AttributeEncoder" minOccurs="0" maxOccurs="unbounded" />
                    </choice>
                </sequence>
                <attribute name="sourceAttributeID" type="string"/>
                <attribute name="scope" type="string" use="required">
                    <annotation>
                        <documentation>Value to use for scoping the attribute.</documentation>
                    </annotation>
                </attribute>
            </extension>
        </complexContent>
    </complexType>

    <complexType name="ScriptedAttribute">
        <annotation>
            <documentation>
                An attribute definition that constructs its attributes by means of a script supported by JSR-223. The
                script is provided all the edu.internet2.middleware.shibboleth.common.attribute.Attribute object
                resolved from all the definitions dependencies. The resultant attribute definition must then be bound to
                a script attribute corresponding to the script variable whose name is the ID of the definition. This
                variable is injected into the script by the attribute definition.
                
                NOTE that in this version Script does not have a sourceAttributeID - all the values for scripts
                come from the Dependency elements.
            </documentation>
        </annotation>
        <complexContent>
            <extension base="resolver:FlattenedBaseAttributeDefinitionType">
                <sequence>
                    <choice maxOccurs="unbounded" minOccurs="0">
                        <element ref="resolver:Dependency" minOccurs="0" maxOccurs="unbounded" />                
                        <element name="DisplayName" type="resolver:LocalizedStringType" minOccurs="0" maxOccurs="unbounded" /> 
                        <element name="DisplayDescription" type="resolver:LocalizedStringType" minOccurs="0" maxOccurs="unbounded"/>
                        <element ref="resolver:AttributeEncoder" minOccurs="0" maxOccurs="unbounded" />
                        <element name="Script" type="string">
                            <annotation>
                                <documentation>The script to evaluate to construct the attribute.</documentation>
                            </annotation>
                        </element>
                        <element name="ScriptFile" type="string">
                            <annotation>
                                <documentation>
                                    The filesystem path to the script to evaluate to construct the attribute.
                                </documentation>
                            </annotation>
                        </element>
                    </choice>
                </sequence>
                <attribute name="language" type="string">
                    <annotation>
                        <documentation>
                            The JSR-233 name for the scripting language that will be used. By default "javascript" is
                            supported.
                        </documentation>
                    </annotation>
                </attribute>
                <attribute name="customObjectRef" type="string">
                    <annotation>
                        <documentation>
                            The name of a bean defined somewhere else which will be injected into the script as an
                            object called "custom".  If not supplied, nothing is injected.
                        </documentation>
                    </annotation>
                </attribute>
            </extension>
        </complexContent>
    </complexType>

    <complexType name="Simple">
        <annotation>
            <documentation>A basic attribute definition.</documentation>
        </annotation>
        <complexContent>
            <extension base="resolver:FlattenedBaseAttributeDefinitionType">
                <sequence>
                    <choice maxOccurs="unbounded" minOccurs="0">
                        <element ref="resolver:Dependency" minOccurs="0" maxOccurs="unbounded" />                
                        <element name="DisplayName" type="resolver:LocalizedStringType" minOccurs="0" maxOccurs="unbounded" /> 
                        <element name="DisplayDescription" type="resolver:LocalizedStringType" minOccurs="0" maxOccurs="unbounded"/>
                        <element ref="resolver:AttributeEncoder" minOccurs="0" maxOccurs="unbounded" />
                    </choice>
                </sequence>
                <attribute name="sourceAttributeID" type="string"/>
            </extension>
        </complexContent>
    </complexType>
    
    <complexType name="SubjectDerivedAttribute">
        <annotation>
            <documentation>A attribute definition to pull attribute values from the Principals.  A short cut looks at IdPAttributePrincipals</documentation>
        </annotation>
        <complexContent>
            <extension base="resolver:FlattenedBaseAttributeDefinitionType">
                <sequence>
                    <choice maxOccurs="unbounded" minOccurs="0">
                        <element name="DisplayName" type="resolver:LocalizedStringType" minOccurs="0" maxOccurs="unbounded" /> 
                        <element name="DisplayDescription" type="resolver:LocalizedStringType" minOccurs="0" maxOccurs="unbounded"/>
                        <element ref="resolver:AttributeEncoder" minOccurs="0" maxOccurs="unbounded" />
                    </choice>
                </sequence>
                <attribute name="attributeValuesFunctionRef" type="string" >
                    <annotation>
                        <documentation>Provides a plug in point to allow general extraction of values from Principals.  Incompatible with idpAttributeName</documentation>
                    </annotation>
                </attribute>

                <attribute name="principalAttributeName" type="string" >
                    <annotation>
                        <documentation>The id of the IdPAttribute contained within a IdPAttributePrincipal to look for.  Incompatible with attributeValueEngineRef.</documentation>
                    </annotation>
                </attribute>
            </extension>
        </complexContent>
    </complexType>

    <complexType name="Template">
        <annotation>
            <documentation>
                An Attribute Definition that constructs its values based on the values of its dependencies using the
                Velocity Template Language. Dependencies may have multiple values, however multiple dependencies must
                have the same number of values. In the case of multi-valued dependencies, the template will be evaluated
                multiples times, iterating over each dependency.
            </documentation>
        </annotation>
        <complexContent>
            <extension base="resolver:FlattenedBaseAttributeDefinitionType">
                <sequence>
                    <choice maxOccurs="unbounded" minOccurs="0">
                        <element ref="resolver:Dependency" minOccurs="0" maxOccurs="unbounded" />                
                        <element name="DisplayName" type="resolver:LocalizedStringType" minOccurs="0" maxOccurs="unbounded" /> 
                        <element name="DisplayDescription" type="resolver:LocalizedStringType" minOccurs="0" maxOccurs="unbounded"/>
                        <element ref="resolver:AttributeEncoder" minOccurs="0" maxOccurs="unbounded" />
                        <element name="Template" type="string" minOccurs="0">
                            <annotation>
                                <documentation>
                                    Template specified in the Velocity Template Language used to construct attribute values.
                                </documentation>
                            </annotation>
                        </element>
                        <element name="SourceAttribute" type="string" maxOccurs="unbounded">
                            <annotation>
                                <documentation>
                                    Attribute IDs which should be used in this definition, rather than the sourceAttributeID
                                    attribute. Each source attribute is available to be used in the Template as
                                    ${attribute_name}. If the source attribute has multiple values, only one value is
                                    available to the template at a time, but the template will be evaluated once for each
                                    value.
                                </documentation>
                            </annotation>
                        </element>
                    </choice>
                </sequence>
                <attribute name="velocityEngine" type="string">
                    <annotation>
                        <documentation>Name of the velocity engine defined within the application.</documentation>
                    </annotation>
                </attribute>
            </extension>
        </complexContent>
    </complexType>
    
    <complexType name="TransientId">
        <annotation>
            <documentation>A attribute definition used to construct transient subject identifiers.</documentation>
        </annotation>
        <complexContent>
            <extension base="resolver:FlattenedBaseAttributeDefinitionType">
                <sequence>
                    <choice maxOccurs="unbounded" minOccurs="0">
                        <element name="DisplayName" type="resolver:LocalizedStringType" minOccurs="0" maxOccurs="unbounded" /> 
                        <element name="DisplayDescription" type="resolver:LocalizedStringType" minOccurs="0" maxOccurs="unbounded"/>
                        <element ref="resolver:AttributeEncoder" minOccurs="0" maxOccurs="unbounded" />
                    </choice>
                </sequence>
                <attribute name="storageServiceRef" type="string" default="shibboleth.StorageService">
                    <annotation>
                        <documentation>Storage service used to store created identifiers</documentation>
                    </annotation>
                </attribute>
                <attribute name="lifetime" type="string">
                    <annotation>
                        <documentation>Lifetime of issued identifiers</documentation>
                    </annotation>
                </attribute>
            </extension>
        </complexContent>
    </complexType>
    
    <!-- Flatten the dc: namespace into the resolver: namespace -->    

    <complexType name="ComputedId">
        <annotation>
            <documentation>
                An ID created by taking the SHA-1 hash of the requesting entity's ID,
                an attribute value (usually a user identifier), and a salt.
            </documentation>
        </annotation>
        <complexContent>
            <extension base="resolver:FlattenedBaseDataConnectorType">
                <sequence>
                    <choice maxOccurs="unbounded" minOccurs="0">
                        <element ref="resolver:Dependency" minOccurs="0" maxOccurs="unbounded" />
                        <element ref="resolver:FailoverDataConnector" minOccurs="0" />
                    </choice>
                </sequence>
                <attribute name="generatedAttributeID" type="string">
                    <annotation>
                        <documentation>
                            The name of the attribute produced by this data connector.
                        </documentation>
                    </annotation>
                </attribute>
                <attribute name="sourceAttributeID" type="string" use="required">
                    <annotation>
                        <documentation>
                            The name of the attribute which should be used to as input to the computed ID.
                        </documentation>
                    </annotation>
                </attribute>
                <attribute name="salt" type="string" use="required">
                    <annotation>
                        <documentation>
                            A salt, of at least 16 bytes, used in the computed ID.
                        </documentation>
                    </annotation>
                </attribute>
                <attribute name="encoding" type="string">
                    <annotation>
                        <documentation>
                            The binary-to-textual encoding used to convert the hash into a usable value.
                        </documentation>
                    </annotation>
                </attribute>
            </extension>
        </complexContent>
    </complexType>

    <complexType name="LDAPDirectory">
        <annotation>
            <documentation>
                A data connector that can pull information from an LDAP, version 3, directory.
            </documentation>
        </annotation>
        <complexContent>
            <extension base="resolver:FlattenedBaseDataConnectorType">
                <sequence>
                    <choice maxOccurs="unbounded" minOccurs="0">
                        <element ref="resolver:Dependency" minOccurs="0" maxOccurs="unbounded" />
                        <element ref="resolver:FailoverDataConnector" minOccurs="0" />
                        <element name="FilterTemplate" type="string" minOccurs="0">
                            <annotation>
                                <documentation>
                                    A template used to construct the LDAP filter used to query the directory.
                                </documentation>
                            </annotation>
                        </element>
                        <element name="ReturnAttributes" type="string" minOccurs="0">
                            <annotation>
                                <documentation>
                                    A space separated list of attributes that should be returned from the query.
                                </documentation>
                            </annotation>
                        </element>
                        <element name="LDAPProperty" type="resolver:PropertyType" minOccurs="0" maxOccurs="unbounded">
                            <annotation>
                                <documentation>
                                    LDAP connection properties relevant to the underlying provider being used.
                                </documentation>
                            </annotation>
                        </element>
                        <element name="StartTLSTrustCredential" type="sec:X509Credential" minOccurs="0">
                            <annotation>
                                <documentation>
                                    The X.509 trust information to use when connecting to the directory over LDAPS or startTLS.
                                </documentation>
                            </annotation>
                        </element>
                        <element name="StartTLSAuthenticationCredential" type="sec:X509Credential" minOccurs="0">
                            <annotation>
                                <documentation>
                                    The X.509 client authentication information to use when connecting to the directory over LDAPS or startTLS.
                                </documentation>
                            </annotation>
                        </element>
                        <element name="ConnectionPool" type="resolver:LdapPoolConfigType" minOccurs="0"/>
                        <element name="Column" type="resolver:ColumnType" minOccurs="0" maxOccurs="unbounded"/>
                        <element name="ResultCache" type="resolver:CacheConfigType"/>
                        <element name="ResultCacheBean" type="string"/>
                    </choice>
                </sequence>
                <attribute name="ldapURL" type="string">
                    <annotation>
                        <documentation>
                        The URL to the LDAP server.
                        If the search scope is set to ONELEVEL only the entries 
                        within this node will be searched, if SUBTREE is specified entries within this node and descendant 
                        nodes will be searched.
                        </documentation>
                    </annotation>
                </attribute>
                <attribute name="connectionStrategy" type="resolver:ConnectionStrategyType">
                    <annotation>
                        <documentation>
                            The LDAP connection strategy. Acceptable values are DEFAULT, ACTIVE_PASSIVE, ROUND_ROBIN, and RANDOM.
                            Default value is ACTIVE_PASSIVE.
                        </documentation>
                    </annotation>
                </attribute>
                <attribute name="baseDN" type="string">
                    <annotation>
                        <documentation>
                            The base DN from which attribute search filtering occurs
                        </documentation>
                    </annotation>
                </attribute>
                <attribute name="principal" type="string">
                    <annotation>
                        <documentation>The DN for the principal connecting to the LDAP directory.</documentation>
                    </annotation>
                </attribute>
                <attribute name="principalCredential" type="string">
                    <annotation>
                        <documentation>
                            The credential for the principal connecting to the LDAP directory.
                        </documentation>
                    </annotation>
                </attribute>
                <attribute name="authenticationType" type="resolver:AuthenticationType">
                    <annotation>
                        <documentation>
                            The LDAP authentication type. Acceptable values are ANONYMOUS, SIMPLE, STRONG, EXTERNAL, DIGEST_MD5, CRAM_MD5, GSSAPI.
                            Default value is SIMPLE.
                        </documentation>
                    </annotation>
                </attribute>
                <attribute name="searchScope" type="resolver:SearchScopeType">
                    <annotation>
                        <documentation>
                            The LDAP search scope. Acceptable values are OBJECT, ONELEVEL, SUBTREE.
                            Default value is SUBTREE.
                        </documentation>
                    </annotation>
                </attribute>
                <attribute name="useStartTLS" type="string">
                    <annotation>
                        <documentation>
                            A boolean flag indicating whether startTLS should be used when connecting to the LDAP.
                            Default value is false.
                        </documentation>
                    </annotation>
                </attribute>
                <attribute name="searchTimeLimit" type="string">
                    <annotation>
                        <documentation>
                            The maximum amount of time to wait for search results. If this limit is
                            reached a timeout error is raised. Default value is 3 seconds.
                            Time is expressed in ISO8601 duration format.
                        </documentation>
                    </annotation>
                </attribute>
                <attribute name="connectTimeout" type="string">
                    <annotation>
                        <documentation>
                            The maximum amount of time to wait for connections to open. If this limit is
                            reached a timeout error is raised. Default value is 3 seconds.
                            Time is expressed in ISO8601 duration format.
                        </documentation>
                    </annotation>
                </attribute>
                <attribute name="responseTimeout" type="string">
                    <annotation>
                        <documentation>
                            The maximum amount of time to wait for operation responses. If this limit is
                            reached a timeout error is raised. Default value is 3 seconds.
                            Time is expressed in ISO8601 duration format.
                        </documentation>
                    </annotation>
                </attribute>
                <attribute name="maxResultSize" type="string">
                    <annotation>
                        <documentation>
                            The maximum number of results that may be returned from a query.
                            Default value is 1.
                        </documentation>
                    </annotation>
                </attribute>
                <attribute name="noResultIsError" type="string">
                    <annotation>
                        <documentation>
                            A boolean flag indicating whether a query returning no results should be considered an error. If
                            an error is raised and a failover dependency is defined for this connector the failover will
                            be invoked.
                            Default value is false.
                        </documentation>
                    </annotation>
                </attribute>
                <attribute name="multipleResultsIsError" type="string">
                    <annotation>
                        <documentation>
                            A boolean flag indicating whether a query returning more than one result should be considered an error. If
                            an error is raised and a failover dependency is defined for this connector the failover will
                            be invoked.
                            Default value is false.
                        </documentation>
                    </annotation>
                </attribute>
                <attribute name="lowercaseAttributeNames" type="string">
                    <annotation>
                        <documentation>
                            Whether to lowercase LDAP attribute names used as IDs for shibboleth attributes
                        </documentation>
                    </annotation>
                </attribute>
                <attribute name="templateEngine" type="string">
                    <annotation>
                        <documentation>Name of the template engine defined within the application.</documentation>
                    </annotation>
                </attribute>
                <attribute name="mappingStrategyRef" type="string">
                    <annotation>
                        <documentation>
                            Reference to a Spring bean providing the MappingStrategy implementation to use.
                        </documentation>
                    </annotation>
                </attribute>
                <attribute name="validatorRef" type="string">
                    <annotation>
                        <documentation>
                            Reference to a Spring bean providing the Validator implementation to use.
                        </documentation>
                    </annotation>
                </attribute>
                <attribute name="trustFile" type="string">
                    <annotation>
                        <documentation>
                            Path to a file with the X.509 trust information to use when connecting to the directory over LDAPS or startTLS
                        </documentation>
                    </annotation>
                </attribute>
            </extension>
        </complexContent>
    </complexType>
    
        <complexType name="RelationalDatabase">
        <annotation>
            <documentation>
                A data connector definition that uses JDBC version 3 to connect to and pull information from a
                relational database.
            </documentation>
        </annotation>
        <complexContent>
            <extension base="resolver:FlattenedBaseDataConnectorType">
                <sequence>
                    <choice maxOccurs="unbounded" minOccurs="0">
                        <element ref="resolver:Dependency" minOccurs="0" maxOccurs="unbounded" />
                        <element ref="resolver:FailoverDataConnector" minOccurs="0" />
                        <element ref="resolver:ContainerManagedConnection">
                            <annotation>
                                <documentation>
                                    A connection, or pool of connections, to the database managed by the application
                                    container.
                                </documentation>
                            </annotation>
                        </element>
                        <element ref="resolver:ApplicationManagedConnection">
                            <annotation>
                                <documentation>
                                    A connection, or pool of connections, to the database managed by the data connector.
                                </documentation>
                            </annotation>
                        </element>
                        <element name="BeanManagedConnection" type="string">
                            <annotation>
                                <documentation>
                                    A connection, or pool of connections, to the database configured in a Spring bean.
                                </documentation>
                            </annotation>
                        </element>
                        <element name="QueryTemplate" type="string"  minOccurs="0">
                            <annotation>
                                <documentation>
                                    A template that will be used to create the SQL query thats pulls information from the
                                    database.
                                </documentation>
                            </annotation>
                        </element>
                        <element name="Column" type="resolver:ColumnType" minOccurs="0" maxOccurs="unbounded"/>
                        <element name="ResultCache" type="resolver:CacheConfigType"/>
                        <element name="ResultCacheBean" type="string"/>
                    </choice>
                </sequence>
                <attribute name="readOnlyConnection" type="string">
                    <annotation>
                        <documentation>
                            A boolean flag that determines whether the connection to the database is read-only, if the
                            value is true, or read-write if the value is false.
                        </documentation>
                    </annotation>
                </attribute>
                <attribute name="queryTimeout" type="string">
                    <annotation>
                        <documentation>
                            Timeout for the queries made to the database.
                            Timeout is given in ISO8601 duration form.
                        </documentation>
                    </annotation>
                </attribute>
                <attribute name="noResultIsError" type="string">
                    <annotation>
                        <documentation>
                            A boolean flag indicating whether a query returning no results should be considered an error. If
                            an error is raised and a failover dependency is defined for this connector the failover will
                            be invoked.
                            Default value is false.
                        </documentation>
                    </annotation>
                </attribute>
                <attribute name="multipleResultsIsError" type="string">
                    <annotation>
                        <documentation>
                            A boolean flag indicating whether a query returning more than one result should be considered an error. If
                            an error is raised and a failover dependency is defined for this connector the failover will
                            be invoked.
                            Default value is false.
                        </documentation>
                    </annotation>
                </attribute>
                <attribute name="templateEngine" type="string">
                    <annotation>
                        <documentation>
                            Name of the template engine defined within the application.
                        </documentation>
                    </annotation>
                </attribute>
                <attribute name="mappingStrategyRef" type="string">
                    <annotation>
                        <documentation>
                            Reference to a Spring bean providing the MappingStrategy implementation to use.
                        </documentation>
                    </annotation>
                </attribute>
                <attribute name="validatorRef" type="string">
                    <annotation>
                        <documentation>
                            Reference to a Spring bean providing the Validator implementation to use.
                        </documentation>
                    </annotation>
                </attribute>
            </extension>
        </complexContent>
    </complexType>
    

    <complexType name="ScriptedDataConnector">
        <annotation>
            <documentation>
                A data connector that constructs attributes by means of a script supported by JSR-223.  Populated 
                Attributes are added to the java.util.Collection "connectorResults". 
            </documentation>
        </annotation>
        <complexContent>
            <extension base="resolver:FlattenedBaseDataConnectorType">
                <choice  maxOccurs="unbounded" minOccurs="0">
                    <element ref="resolver:Dependency" minOccurs="0" maxOccurs="unbounded" />
                    <element ref="resolver:FailoverDataConnector" minOccurs="0" />
                    <element name="Script" type="string" minOccurs="0">
                        <annotation>
                            <documentation>The script to evaluate to construct the attribute.</documentation>
                        </annotation>
                    </element>
                    <element name="ScriptFile" type="string" minOccurs="0">
                        <annotation>
                            <documentation>
                                The filesystem path to the script to evaluate to construct the attribute.
                            </documentation>
                        </annotation>
                    </element>
                </choice>
                <attribute name="language" type="string">
                    <annotation>
                        <documentation>
                            The JSR-233 name for the scripting language that will be used. By default "javascript" is
                            supported.
                        </documentation>
                    </annotation>
                </attribute>
                <attribute name="customObjectRef" type="string">
                    <annotation>
                        <documentation>
                            The name of a bean defined somewhere else which will be injected into the script as an
                            object called "custom".  If not supplied, nothing is injected.
                        </documentation>
                    </annotation>
                </attribute>
            </extension>
        </complexContent>
    </complexType>

    <complexType name="Static">
        <annotation>
            <documentation>
                A data connector that gets its information from a static list of attributes and values specified within
                this configuration.
            </documentation>
        </annotation>
        <complexContent>
            <extension base="resolver:FlattenedBaseDataConnectorType">
                <choice  maxOccurs="unbounded" minOccurs="0">
                    <element ref="resolver:Dependency" minOccurs="0" maxOccurs="unbounded" />
                    <element ref="resolver:FailoverDataConnector" minOccurs="0" />
                    <element name="Attribute" minOccurs="0" maxOccurs="unbounded">
                        <annotation>
                            <documentation>
                                Specifies an attribute, and its values, to be exposed by this connector.
                            </documentation>
                        </annotation>
                        <complexType>
                            <sequence>
                                <element name="Value" type="string" maxOccurs="unbounded">
                                    <annotation>
                                        <documentation>
                                            A value of the attribute. If the value contains characters that would
                                            otherwise need to be XML encoded you may wrap the value in a CDATA section.
                                        </documentation>
                                    </annotation>
                                </element>
                            </sequence>
                            <attribute name="id" type="string" use="required">
                                <annotation>
                                    <documentation>The ID of the attribute.</documentation>
                                </annotation>
                            </attribute>
                        </complexType>
                    </element>
                </choice>
            </extension>
        </complexContent>
    </complexType>
        
    <complexType name="StoredId">
        <annotation>
            <documentation>
                A connector that either generates a persistent ID by hashing or by looking it up in a database.
            </documentation>
        </annotation>
        <complexContent>
            <extension base="resolver:BaseDataConnectorType">
                <choice minOccurs="0">
                    <element ref="resolver:ContainerManagedConnection">
                        <annotation>
                            <documentation>
                                A connection, or pool of connections, to the database managed by the application
                                container.
                            </documentation>
                        </annotation>
                    </element>
                    <element ref="resolver:ApplicationManagedConnection">
                        <annotation>
                            <documentation>
                                A connection, or pool of connections, to the database managed by the data connector.
                            </documentation>
                        </annotation>
                    </element>
                        <element name="BeanManagedConnection" type="string">
                            <annotation>
                                <documentation>
                                    A connection, or pool of connections, to the database configured in a Spring bean.
                                </documentation>
                            </annotation>
                        </element>
                </choice>
                <attribute name="queryTimeout" type="string">
                    <annotation>
                        <documentation>
                            Timeout for the queries made to the database.
                            Timeout is given in ISO8601 duration form.
                        </documentation>
                    </annotation>
                </attribute>
                <attribute name="transactionRetries" type="string">
                    <annotation>
                        <documentation>
                            Number of retries if insert fails (defaults to 3).
                        </documentation>
                    </annotation>
                </attribute>
                <attribute name="failFast" type="string">
                    <annotation>
                        <documentation>
                            Whether to fail if the store cannot be verified at startup (defaults to false).
                        </documentation>
                    </annotation>
                </attribute>
                <attribute name="retryableErrors" >
                    <annotation>
                        <documentation>
                            A space-delimited list of SQLState codes to treat as retryable (indicating
                            a duplicate insert error occurred).
                        </documentation>
                    </annotation>
                    <simpleType>
                        <list itemType="string"/>
                    </simpleType>
                </attribute>
                <attribute name="generatedAttributeID" type="string">
                    <annotation>
                        <documentation>
                            The name of the attribute produced by this data connector.
                        </documentation>
                    </annotation>
                </attribute>
                <attribute name="sourceAttributeID" type="string" use="required">
                    <annotation>
                        <documentation>
                            The name of the attribute which should be used to as input to the computed ID.
                        </documentation>
                    </annotation>
                </attribute>
                <attribute name="salt" type="string" >
                    <annotation>
                        <documentation>
                            A salt, of at least 16 bytes, used in the computed ID.
                        </documentation>
                    </annotation>
                </attribute>
                <attribute name="encoding" type="string">
                    <annotation>
                        <documentation>
                            The binary-to-textual encoding used to convert the hash into a usable value.
                        </documentation>
                    </annotation>
                </attribute>
            </extension>
        </complexContent>
    </complexType>
    
    <!--  Support types for DataConnectors  -->
    
    <complexType name="ColumnType">
        <attribute name="columnName" type="string" use="required">
            <annotation>
                <documentation>The name of the database column.</documentation>
            </annotation>
        </attribute>
        <attribute name="attributeID" type="string">
            <annotation>
                <documentation>The name of the attribute that data from this column should be added to.</documentation>
            </annotation>
        </attribute>
        <attribute name="type" type="resolver:ColumnDataType">
            <annotation>
                <documentation>The Java data type data in the column should be extracted as.</documentation>
            </annotation>
        </attribute>
    </complexType>

    <simpleType name="ColumnDataType">
        <restriction base="string">
            <enumeration value="BigDecimal"/>
            <enumeration value="Boolean"/>
            <enumeration value="Byte"/>
            <enumeration value="ByteArray"/>
            <enumeration value="Date"/>
            <enumeration value="Double"/>
            <enumeration value="Float"/>
            <enumeration value="Integer"/>
            <enumeration value="Long"/>
            <enumeration value="Object"/>
            <enumeration value="Short"/>
            <enumeration value="String"/>
            <enumeration value="Time"/>
            <enumeration value="Timestamp"/>
            <enumeration value="URL"/>
        </restriction>
    </simpleType>
    
    <simpleType name="ConnectionStrategyType">
        <annotation>
            <documentation>Supported connection strategies.</documentation>
        </annotation>
        <restriction base="string">
            <enumeration value="DEFAULT"/>
            <enumeration value="ACTIVE_PASSIVE"/>
            <enumeration value="ROUND_ROBIN"/>
            <enumeration value="RANDOM"/>
        </restriction>
    </simpleType>

    <simpleType name="AuthenticationType">
        <annotation>
            <documentation>Supported authentication types.</documentation>
        </annotation>
        <restriction base="string">
            <enumeration value="ANONYMOUS"/>
            <enumeration value="SIMPLE"/>
            <enumeration value="STRONG"/>
            <enumeration value="EXTERNAL"/>
            <enumeration value="DIGEST_MD5"/>
            <enumeration value="CRAM_MD5"/>
            <enumeration value="GSSAPI"/>
        </restriction>
    </simpleType>

    <simpleType name="SearchScopeType">
        <annotation>
            <documentation>Supported search scopes.</documentation>
        </annotation>
        <restriction base="string">
            <enumeration value="SUBTREE"/>
            <enumeration value="ONELEVEL"/>
            <enumeration value="OBJECT"/>
        </restriction>
    </simpleType>

    <complexType name="LdapPoolConfigType">
        <attribute name="minPoolSize" type="string">
            <annotation>
                <documentation>
                    The minimum number of ldap connections that should always be available in the pool.
                    Note that these connections are provisioned as soon as the pool is initialized.
                    Default value is 0.
                </documentation>
            </annotation>
        </attribute>
        <attribute name="maxPoolSize" type="string">
            <annotation>
                <documentation>
                    The maximum number of ldap connections that should ever be available in the pool.
                    Note that when this threshold is reach the pool will begin blocking until a connection
                    is available.
                    Default value is 3.
                </documentation>
            </annotation>
        </attribute>
        <attribute name="blockWhenEmpty" type="string">
            <annotation>
                <documentation>
                    Whether the pool should block when maxPoolSize objects are in use.
                    If false, pool will grow beyond the maxPoolSize value.
                    Note that a properly configured blocking pool will yield better performance. 
                    Default value is true.
                </documentation>
            </annotation>
        </attribute>
        <attribute name="blockWaitTime" type="string">
            <annotation>
                <documentation>
                    Amount of time to block while waiting for a connection from the pool.  If no
                    wait time is given, callers will block indefinitely.
                    
                    Values are expressed in ISO8601 duration format.
                </documentation>
            </annotation>
        </attribute>
        <attribute name="validatePeriodically" type="string">
            <annotation>
                <documentation>
                    Whether each ldap connection should be checked on a periodic basis.
                    Default value is false.
                </documentation>
            </annotation>
        </attribute>
        <attribute name="validateTimerPeriod" type="string">
            <annotation>
                <documentation>
                    Time that the periodic pool validation process should repeat.
                    Ldap objects are pruned when they have been idle beyond the expiration time.
                    The pool is not pruned below the minimum pool size.
                    Default value is 30 minutes.
                    
                    Period is expressed in ISO8601 duration format.
                </documentation>
            </annotation>
        </attribute>
        <attribute name="validateDN" type="string">
            <annotation>
                <documentation>
                    Ldap compare DN to use for connection validation.
                    Used in conjunction with validateFilter to perform a compare.
                    Default value is empty.
                </documentation>
            </annotation>
        </attribute>
        <attribute name="validateFilter" type="string">
            <annotation>
                <documentation>
                    Ldap compare filter to use for connection validation.
                    Used in conjuction with validateDN to perform a compare.
                    Default value is (objectClass=*).
                </documentation>
            </annotation>
        </attribute>
        <attribute name="expirationTime" type="string">
            <annotation>
                <documentation>
                    Time in that an object in the pool should be considered stale and ready for removal.
                    Time is expressed in ISO8601 duration format.
                </documentation>
            </annotation>
        </attribute>
        <attribute name="failFastInitialize" type="string">
            <annotation>
                <documentation>
                    A boolean flag indicating whether pool initialization should fail if configuration criteria is not met.
                    Default value is true.
                </documentation>
            </annotation>
        </attribute>
    </complexType>

    <complexType name="CacheConfigType">
        <attribute name="cacheManagerRef" type="string">
        <annotation>
                <documentation>
                    Name of the CacheManager bean that will manage the result cache.  This is not used.
                </documentation>
            </annotation>
        </attribute>
        <attribute name="elementTimeToLive" type="string">
        <annotation>
                <documentation>
                    Length of time a result will be cached.

                    Duration is expressed in ISO8601 duration notation.
                </documentation>
            </annotation>
        </attribute>
        <attribute name="maximumCachedElements" type="string">
        <annotation>
                <documentation>
                   Maximum number of results that will be held in cache.
                </documentation>
            </annotation>
        </attribute>
    </complexType>
 
    
    <element name="ContainerManagedConnection" type="resolver:ContainerManagedConnectionType">
        <annotation>
            <documentation>
                Describes a database connection source that is managed by the application container.
            </documentation>
        </annotation>
    </element>
    <complexType name="ContainerManagedConnectionType">
        <sequence>
            <element name="JNDIConnectionProperty" type="resolver:PropertyType" minOccurs="0" maxOccurs="unbounded">
                <annotation>
                    <documentation>
                        A property used when constructing a JNDI initial context which in turn is used to lookup the
                        database DataSource.
                    </documentation>
                </annotation>
            </element>
        </sequence>
        <attribute name="resourceName" type="string" use="required">
            <annotation>
                <documentation>The resource name the DataSource is bound to in the JNDI tree.</documentation>
            </annotation>
        </attribute>
    </complexType>
    
   <complexType name="PropertyType">
        <attribute name="name" type="string" use="required">
            <annotation>
                <documentation>The name of the property.</documentation>
            </annotation>
        </attribute>
        <attribute name="value" type="string" use="required">
            <annotation>
                <documentation>The value of the property,</documentation>
            </annotation>
        </attribute>
    </complexType>


    <element name="ApplicationManagedConnection" type="resolver:ApplicationManagedConnectionType">
        <annotation>
            <documentation>
                Describes a database connection source that is managed by the attribute resolver data connector.
            </documentation>
        </annotation>
    </element>
    
    <complexType name="ApplicationManagedConnectionType">
        <attribute name="jdbcDriver" type="string" use="required">
            <annotation>
                <documentation>
                    This is the full qualified class name of the JDBC driver used to connect to the database.
                </documentation>
            </annotation>
        </attribute>
        <attribute name="jdbcURL" type="string" use="required">
            <annotation>
                <documentation>
                    The JDBC URL for the database. These are usually of the form
                    jdbc:databaseProduceName:databaseSpecificInformation. For example, jdbc:hsql:mem:MyDatabase
                </documentation>
            </annotation>
        </attribute>
        <attribute name="jdbcUserName" type="string">
            <annotation>
                <documentation>The user name to use while connecting to the database.</documentation>
            </annotation>
        </attribute>
        <attribute name="jdbcPassword" type="string">
            <annotation>
                <documentation>The password to use while connecting to the database.</documentation>
            </annotation>
        </attribute>
        <attribute name="poolAcquireIncrement" type="string">
            <annotation>
                <documentation>
                    The number of new connections that will be created when the pool is exhausted.
                </documentation>
            </annotation>
        </attribute>
        <attribute name="poolAcquireRetryAttempts" type="string">
            <annotation>
                <documentation>
                    The number of times the pool will try to establish a connection to a database.
                </documentation>
            </annotation>
        </attribute>
        <attribute name="poolAcquireRetryDelay" type="string">
            <annotation>
                <documentation>
                    The amount of time, in milliseconds, the pool will wait before trying to retrieve a new connection
                    after it has failed.
                </documentation>
            </annotation>
        </attribute>
        <attribute name="poolBreakAfterAcquireFailure" type="string">
            <annotation>
                <documentation>
                    A boolean flag that indicates whether the pool should be marked as permanently unavailable if a new
                    connection can not be established after the acquire retry attempts is reached.
                </documentation>
            </annotation>
        </attribute>
        <attribute name="poolMinSize" type="string">
            <annotation>
                <documentation>
                    The minimum number of connections the pool will establish with the database. A value of zero means
                    there is no minimum.
                </documentation>
            </annotation>
        </attribute>
        <attribute name="poolMaxSize" type="string">
            <annotation>
                <documentation>
                    The maximum number of connections the pool will establish with the database. A value of zero means
                    there is no maximum.
                </documentation>
            </annotation>
        </attribute>
        <attribute name="poolMaxIdleTime" type="string">
            <annotation>
                <documentation>
                    The maximum time, in seconds, that an established connection will remain idle before it is closed.
                </documentation>
            </annotation>
        </attribute>
        <attribute name="poolIdleTestPeriod" type="string">
            <annotation>
                <documentation>
                    The interval, in seconds, that the pool will scan idle established connections, using the validation
                    query, for liveness.
                </documentation>
            </annotation>
        </attribute>
    </complexType>

    
    
    <!-- Flatten the enc: namespace into the resolver: namespace -->    
    
    <!-- Encoders that produce SAML 1 or SAML 2 Attributes -->
    <complexType name="SAML1String">
        <annotation>
            <documentation>Defines a SAML 1 string encoder for an attribute.</documentation>
        </annotation>
        <complexContent>
            <extension base="resolver:BaseAttributeEncoderType">
                <attribute name="namespace" type="string">
                    <annotation>
                        <documentation>The SAML 1 Namespace of the attribute.</documentation>
                    </annotation>
                </attribute>
            </extension>
        </complexContent>
    </complexType>

    <complexType name="SAML1Base64">
        <annotation>
            <documentation>Defines a SAML 1 Base64 encoder for an attribute.</documentation>
        </annotation>
        <complexContent>
            <extension base="resolver:BaseAttributeEncoderType">
                <attribute name="namespace" type="string">
                    <annotation>
                        <documentation>The SAML 1 Namespace of the attribute.</documentation>
                    </annotation>
                </attribute>
            </extension>
        </complexContent>
    </complexType>
    
    <complexType name="SAML1XMLObject">
        <annotation>
            <documentation>Defines a SAML 1 Base64 encoder for an attribute.</documentation>
        </annotation>
        <complexContent>
            <extension base="resolver:BaseAttributeEncoderType">
                <attribute name="namespace" type="string">
                    <annotation>
                        <documentation>The SAML 1 Namespace of the attribute.</documentation>
                    </annotation>
                </attribute>
            </extension>
        </complexContent>
    </complexType>

    <complexType name="SAML2String">
        <annotation>
            <documentation>Defines a SAML 2 string encoder for an attribute.</documentation>
        </annotation>
        <complexContent>
            <extension base="resolver:BaseAttributeEncoderType">
                <attribute name="nameFormat" type="string">
                    <annotation>
                        <documentation>The SAML 2 NameFormat of the attribute.</documentation>
                    </annotation>
                </attribute>
                <attribute name="friendlyName" type="string" use="optional">
                    <annotation>
                        <documentation>The SAML 2 FriendlyName of the attribute.</documentation>
                    </annotation>
                </attribute>
            </extension>
        </complexContent>
    </complexType>

    <complexType name="SAML2Base64">
        <annotation>
            <documentation>Defines a SAML 2 Base64 encoder for an attribute.</documentation>
        </annotation>
        <complexContent>
            <extension base="resolver:BaseAttributeEncoderType">
                <attribute name="nameFormat" type="string">
                    <annotation>
                        <documentation>The SAML 2 NameFormat of the attribute.</documentation>
                    </annotation>
                </attribute>
                <attribute name="friendlyName" type="string" use="optional">
                    <annotation>
                        <documentation>The SAML 2 FriendlyName of the attribute.</documentation>
                    </annotation>
                </attribute>
            </extension>
        </complexContent>
    </complexType>
    
    <complexType name="SAML2XMLObject">
        <annotation>
            <documentation>Defines a SAML 2 Base64 encoder for an attribute.</documentation>
        </annotation>
        <complexContent>
            <extension base="resolver:BaseAttributeEncoderType">
                <attribute name="nameFormat" type="string">
                    <annotation>
                        <documentation>The SAML 2 NameFormat of the attribute.</documentation>
                    </annotation>
                </attribute>
                <attribute name="friendlyName" type="string" use="optional">
                    <annotation>
                        <documentation>The SAML 2 FriendlyName of the attribute.</documentation>
                    </annotation>
                </attribute>
            </extension>
        </complexContent>
    </complexType>

    <complexType name="BaseScopedAttributeEncoderType">
        <annotation>
            <documentation>Defines an encoder for a scoped attribute.</documentation>
        </annotation>
        <complexContent>
            <extension base="resolver:BaseAttributeEncoderType">
                <attribute name="scopeType" type="string" use="optional">
                    <annotation>
                        <documentation>
                            The type of scoping to use for the encoded attribute. Valid values are "inline" or
                            "attribute".
                        </documentation>
                    </annotation>
                </attribute>
                <attribute name="scopeDelimiter" type="string" use="optional">
                    <annotation>
                        <documentation>
                            If scopeType is "inline", this is the delimeter used between the attribute value and
                            scope.
                        </documentation>
                    </annotation>
                </attribute>
                <attribute name="scopeAttribute" type="string" use="optional">
                    <annotation>
                        <documentation>
                            If scopeType is "attribute", this is the name of the name of the attribute used to carry the
                            scope value.
                        </documentation>
                    </annotation>
                </attribute>
            </extension>
        </complexContent>
    </complexType>

    <complexType name="SAML1ScopedString">
        <annotation>
            <documentation>Defines a SAML 1 string encoder for a scoped attribute.</documentation>
        </annotation>
        <complexContent>
            <extension base="resolver:BaseScopedAttributeEncoderType">
                <attribute name="namespace" type="string">
                    <annotation>
                        <documentation>The SAML 1 Namespace of the attribute.</documentation>
                    </annotation>
                </attribute>
            </extension>
        </complexContent>
    </complexType>

    <complexType name="SAML2ScopedString">
        <annotation>
            <documentation>Defines a SAML 2 string encoder for a scoped attribute.</documentation>
        </annotation>
        <complexContent>
            <extension base="resolver:BaseScopedAttributeEncoderType">
                <attribute name="nameFormat" type="string">
                    <annotation>
                        <documentation>The SAML 2 NameFormat of the attribute.</documentation>
                    </annotation>
                </attribute>
                <attribute name="friendlyName" type="string" use="optional">
                    <annotation>
                        <documentation>The SAML 2 FriendlyName of the attribute.</documentation>
                    </annotation>
                </attribute>
            </extension>
        </complexContent>
    </complexType>

    <!-- Encoders that produce SAML 1 or 2 name identifiers -->
    
    <complexType name="SAML1StringNameIdentifier">
        <annotation>
            <documentation>Defines a SAML 1 string encoder for a NameIdentifier.</documentation>
        </annotation>
        <complexContent>
            <extension base="resolver:BaseAttributeEncoderType">
                <attribute name="nameFormat" type="string">
                    <annotation>
                        <documentation>The SAML 1 NameFormat of the NameIdentifier.</documentation>
                    </annotation>
                </attribute>
                <attribute name="nameQualifier" type="string" use="optional">
                    <annotation>
                        <documentation>The SAML 1 NameQualfier of the NameIdentifier.</documentation>
                    </annotation>
                </attribute>
            </extension>
        </complexContent>
    </complexType>

    <complexType name="SAML2StringNameID">
        <annotation>
            <documentation>Defines a SAML 2 string encoder for a NameID.</documentation>
        </annotation>
        <complexContent>
            <extension base="resolver:BaseAttributeEncoderType">
                <attribute name="nameFormat" type="string">
                    <annotation>
                        <documentation>The SAML 2 NameFormat of the NameID.</documentation>
                    </annotation>
                </attribute>
                <attribute name="nameQualifier" type="string" use="optional">
                    <annotation>
                        <documentation>The SAML 2 NameQualfier of the NameID.</documentation>
                    </annotation>
                </attribute>
            </extension>
        </complexContent>
    </complexType>
</schema>
